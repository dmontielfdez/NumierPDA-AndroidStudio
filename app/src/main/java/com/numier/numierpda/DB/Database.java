package com.numier.numierpda.DB;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class Database extends SQLiteOpenHelper {

	// Secuencias de creación sql para las tablas empleado, categoria y productos
	private final String sqlCreateWorker = " CREATE TABLE WORKER(ID_WORKER TEXT, PASS TEXT, NAME TEXT,"
			+ "CONSTRAINT PK_WORKER PRIMARY KEY (ID_WORKER));";

	private final String sqlCreateSubProduct = "CREATE TABLE SUBPRODUCT(ID_SUBPRODUCT INTEGER,NAME TEXT,"
			+ "PRICE REAL,CONSTRAINT PK_SUBPRODUCT PRIMARY KEY (ID_SUBPRODUCT));";
	
	private final String sqlCreateModifier = "CREATE TABLE MODIFIER(ID_MODIFIER INTEGER,NAME TEXT,"
			+ "PRICE REAL, GRUPO TEXT, CONSTRAINT PK_MODIFIER PRIMARY KEY (ID_MODIFIER));";
	
	private final String sqlCreateMenu = "CREATE TABLE MENU(ID_MENU INTEGER, CODE_MENU TEXT, TITLE1 TEXT, TITLE2 TEXT, TITLE3 TEXT, TITLE4 TEXT, TITLE5 TEXT, TITLE6 TEXT,"
			+ "CONSTRAINT PK_MENU PRIMARY KEY (ID_MENU));";
	
	private final String sqlCreateMenuDet = "CREATE TABLE MENU_DET(ID_MENU_DET INTEGER, ID_MENU TEXT, CODE TEXT, NUM_PLATO INTEGER, COUNTER INTEGER,"
			+ "CONSTRAINT PK_MENU PRIMARY KEY (ID_MENU_DET));";
	
	private final String sqlCreateSelingSubproduct = "CREATE TABLE SELING_SUBPRODUCT("
			+ "ID_PRODUCT TEXT, ID_SUBPRODUCT TEXT,NAME TEXT, TYPE TEXT, CHECKED INTEGER, COUNTER INTEGER, PRICE REAL,"
			+ "CONSTRAINT PK_SELING_SUBPRODUCT PRIMARY KEY (ID_PRODUCT, ID_SUBPRODUCT, TYPE));";

	private final String sqlCreateCategory = "CREATE TABLE CATEGORY(ID_CATEGORY TEXT,NAME TEXT, CODE TEXT, "
			+ "CONSTRAINT PK_CATEGORY PRIMARY KEY (ID_CATEGORY));";

	private final String sqlCreateProduct = "CREATE TABLE PRODUCT(ID_PRODUCT TEXT,NAME TEXT,"
			+ "ID_CATEGORY TEXT,COLOR TEXT,OPTION1 INTEGER,OPTION2 INTEGER,OPTION3 INTEGER,"
			+ "OPTION4 INTEGER,OPTION5 INTEGER,RATE1 REAL,RATE2 REAL,RATE3 REAL,RATE4 REAL,"
			+ "RATE1_OPTION INTEGER,RATE2_OPTION INTEGER,RATE3_OPTION INTEGER,RATE4_OPTION INTEGER,VALUE_RATE1_OPTION TEXT,"
			+ "VALUE_RATE2_OPTION TEXT,VALUE_RATE3_OPTION TEXT,VALUE_RATE4_OPTION TEXT,ASK_PRICE INTEGER,ASK_WEIGHT INTEGER,"
			+ "SUBPRODUCTS INTEGER,DISCOUNT REAL,NUMBER_SUBPRODUCTS INTEGER, ABSOLUT_PRICE INTEGER, NUM_PLATO INTEGER, IS_MENU INTEGER, SELING INTEGER, DESCRI TEXT,"
			+ "CONSTRAINT PK_PRODUCT PRIMARY KEY (ID_PRODUCT),"
			+ "CONSTRAINT FK_PRODUCT_CATEGORY FOREIGN KEY (ID_CATEGORY) REFERENCES CATEGORY (ID_CATEGORY));";

	private final String sqlCreateProductSubproduct = "CREATE TABLE PRODUCTSUBPRODUCT(ID_SUBPRODUCT INTEGER,"
			+ "ID_PRODUCT TEXT,INCLUDED INTEGER, PRICE REAL, ORDEN INTEGER, TYPE TEXT, CONSTRAINT PK_PRODUCTSUBPRODUCT PRIMARY KEY (ID_PRODUCT,ID_SUBPRODUCT, TYPE),"
			+ "CONSTRAINT FK_PRODUCTSUBPRODUCT_PRODUCT FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT (ID_PRODUCT),"
			+ "CONSTRAINT FK_PRODUCTSUBPRODUCT_SUBPRODUCT FOREIGN KEY (ID_SUBPRODUCT) REFERENCES SUBPRODUCT (ID_SUBPRODUCT));";

	private final String sqlCreateHeader = "CREATE TABLE HEADER(ID_HEADER INTEGER,TABLE_NUMBER INTEGER,AMOUNT REAL,"
			+ "PRINTED INTEGER,LOCKED INTEGER,DATETIME TEXT,ID_EMPLOYEE TEXT,PDA_NAME TEXT,DINERS INTEGER,"
			+ "CONSTRAINT PK_HEADER PRIMARY KEY (ID_HEADER),"
			+ "CONSTRAINT FK_HEADER_EMPLOYEE FOREIGN KEY (ID_EMPLOYEE) REFERENCES EMPLOYEE (ID_EMPLOYEE))";

	private final String sqlCreateDetalle = "CREATE TABLE DETALLE(ID_DETALLE INTEGER,ID_PRODUCT TEXT,QUANTITY INTEGER,"
			+ "PRICE REAL,AMOUNT REAL,IVA REAL,RATE TEXT,OPTION TEXT,ORDERS INTEGER,PRINTED INTEGER,"
			+ "CONSTRAINT PK_DETALLE PRIMARY KEY (ID_DETALLE),"
			+ "CONSTRAINT FK_DETALLE_PRODUCT FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT (ID_PRODUCT))";

	private final String sqlCreateSubproductDetalle = "CREATE TABLE SUBPRODUCTDETALLE(ID_SUBPRODUCT_DETALLE INTEGER,"
			+ "ID_SUBPRODUCT INTEGER,ID_DETALLE INTEGER,CONSTRAINT PK_SUBPRODUCT_DETALLE PRIMARY KEY (ID_SUBPRODUCT_DETALLE),"
			+ "CONSTRAINT FK_SUBPRODUCT_DETALLE_SUBPRODUCT FOREIGN KEY (ID_SUBPRODUCT) REFERENCES SUBPRODUCT (ID_SUBPRODUCT),"
			+ "CONSTRAINT FK_SUBPRODUCT_DETALLE_DETALLE FOREIGN KEY (ID_DETALLE) REFERENCES DETALLE (ID_DETALLE))";
	
	private final String sqlCreateConnections = " CREATE TABLE CONNECTIONS(ID_CONNECTION INTEGER PRIMARY KEY AUTOINCREMENT, NAME TEXT,URL TEXT, KEY TEXT, OPERARIO TEXT, RATE TEXT, TERMINAL TEXT)";
	
	public final static int versionDB = 1;

	public Database(Context context) {
		super(context, "NUMIER", null, versionDB);

	}

	@Override
	public void onCreate(SQLiteDatabase db) {
		db.execSQL(sqlCreateWorker);
		db.execSQL(sqlCreateSubProduct);
		db.execSQL(sqlCreateCategory);
		db.execSQL(sqlCreateProduct);
		db.execSQL(sqlCreateProductSubproduct);
		db.execSQL(sqlCreateHeader);
		db.execSQL(sqlCreateDetalle);
		db.execSQL(sqlCreateSubproductDetalle);
		db.execSQL(sqlCreateMenu);
		db.execSQL(sqlCreateMenuDet);
		db.execSQL(sqlCreateModifier);
		db.execSQL(sqlCreateConnections);
		db.execSQL(sqlCreateSelingSubproduct);
		

	}

	@Override
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		// Se elimina la versión anterior de la tabla
		db.execSQL("DROP TABLE IF EXISTS WORKER");
		db.execSQL("DROP TABLE IF EXISTS SUBPRODUCT");
		db.execSQL("DROP TABLE IF EXISTS PRODUCT");
		db.execSQL("DROP TABLE IF EXISTS CATEGORY");
		db.execSQL("DROP TABLE IF EXISTS PRODUCTSUBPRODUCT");
		db.execSQL("DROP TABLE IF EXISTS HEADER");
		db.execSQL("DROP TABLE IF EXISTS DETALLE");
		db.execSQL("DROP TABLE IF EXISTS SUBPRODUCTDETALLE");
		db.execSQL("DROP TABLE IF EXISTS MENU");
		db.execSQL("DROP TABLE IF EXISTS MENU_DET");
		db.execSQL("DROP TABLE IF EXISTS MODIFIER");
		db.execSQL("DROP TABLE IF EXISTS CONNECTIONS");
		db.execSQL("DROP TABLE IF EXISTS SELING_SUBPRODUCT");

		// Se crea la nueva versión de la tabla
		db.execSQL(sqlCreateWorker);
		db.execSQL(sqlCreateSubProduct);
		db.execSQL(sqlCreateCategory);
		db.execSQL(sqlCreateProduct);
		db.execSQL(sqlCreateProductSubproduct);
		db.execSQL(sqlCreateHeader);
		db.execSQL(sqlCreateDetalle);
		db.execSQL(sqlCreateSubproductDetalle);
		db.execSQL(sqlCreateMenu);
		db.execSQL(sqlCreateMenuDet);
		db.execSQL(sqlCreateModifier);
		db.execSQL(sqlCreateConnections);
		db.execSQL(sqlCreateSelingSubproduct);

	}
}
